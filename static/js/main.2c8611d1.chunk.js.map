{"version":3,"sources":["components/typing/typing.module.css","components/editor_detail/editor_detail.module.css","components/sign-contanier/sign-contanie.module.css","components/view_detail/view_detail.module.css","components/header/header.module.css","pages/homePage.module.css","components/editor_container/editor.container.module.css","components/view_container/view_container.module.css","pages/mainPage.module.css","components/typing/typing.jsx","components/sign-contanier/sign-container.jsx","pages/homePage.jsx","components/editor_detail/editor_detail.jsx","components/editor_container/editor_container.jsx","components/view_detail/view_detail.jsx","components/view_container/view_container.jsx","pages/mainPage.jsx","components/header/header.jsx","firebase/firebase.utils.js","app.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Typing","state","text","textArrayIdx","charIdx","isTyping","cursorRef","createRef","timer","undefined","typingDelay","erasingDelay","nextTypingDelay","type","props","textArray","length","current","classList","contains","styles","typing","add","setState","remove","erase","substring","console","log","this","setTimeout","prevProps","tiemr","clearTimeout","className","container","ref","cursor","PureComponent","SignContainer","display","onClickX","onClickGoogle","onClickGithub","screen","hide","outBtn","onClick","header","googleBtn","githubBtn","HomePage","user","signInGoogle","signInGithub","useState","signContainerDisplay","setSignContainerDisplay","history","useHistory","logIn","push","EditorDetail","memo","idx","data","edit","onDelete","selectedFile","setSelectedFile","img","src","imgUrl","alt","info","colorPicker","id","onChange","event","bgColor","target","value","fontColor","placeholder","name","maxLength","job","email","phoneNumber","btns","fileUploader","files","imgUploadBtn","formData","FormData","append","process","Axios","post","then","response","secure_url","window","alert","deleteBtn","EditorContainer","handleEdit","onEidt","changeData","newData","splice","map","item","ViewDetail","style","background","color","ViewContainer","Date","now","Math","random","MainPage","Header","signOut","plusOne","location","useLocation","useEffect","getCurrentLocation","pathname","moveToHomePage","title","plus","logState","firebase","initializeApp","apiKey","authDomain","projectId","databasseURL","storageBucket","messagingSenderId","appId","measurementId","auth","providerOfGoogle","GoogleAuthProvider","setCustomParameters","prompt","database","writeData","userId","set","App","setUser","setData","onAuthStateChanged","result","callback","uid","on","snapshot","val","off","readOff","signInWithPopup","catch","error","errorCode","code","errorMessage","message","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c8611d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"typing_container__3raFB\",\"text\":\"typing_text__3zGPp\",\"cursor\":\"typing_cursor__nUMnE\",\"blink\":\"typing_blink__1blYP\",\"typing\":\"typing_typing__2pxTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"editor_detail_container__PGh9V\",\"img\":\"editor_detail_img__28PXS\",\"info\":\"editor_detail_info__2DOr_\",\"colorPicker\":\"editor_detail_colorPicker__1bk_T\",\"btns\":\"editor_detail_btns__2LiKq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"sign-contanie_screen__292K8\",\"hide\":\"sign-contanie_hide__3MGib\",\"outBtn\":\"sign-contanie_outBtn__1OJxw\",\"container\":\"sign-contanie_container__36PIe\",\"header\":\"sign-contanie_header__1k_Jy\",\"googleBtn\":\"sign-contanie_googleBtn__1booY\",\"githubBtn\":\"sign-contanie_githubBtn__2G6iQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"view_detail_container__23sDL\",\"img\":\"view_detail_img__2XFG9\",\"info\":\"view_detail_info__1OQuI\",\"description\":\"view_detail_description__1JAE6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__Qg6Mi\",\"title\":\"header_title__1DXxp\",\"logState\":\"header_logState__1DAl3\",\"plus\":\"header_plus__36dcT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"homePage_container__1EHfv\",\"logIn\":\"homePage_logIn__2iMyu\",\"fadein\":\"homePage_fadein__2pArN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"editor_container_container__343ax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"view_container_container__I9bo9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"mainPage_container__3tFcd\"};","import React, { createRef, PureComponent } from \"react\";\nimport styles from \"./typing.module.css\";\n\nclass Typing extends PureComponent {\n    state = {\n        text: \"\",\n        textArrayIdx: 0,\n        charIdx: 0,\n        isTyping: true,\n    };\n\n    cursorRef = createRef();\n    timer = undefined;\n    typingDelay = 100;\n    erasingDelay = 50;\n    nextTypingDelay = 1000;\n\n    //시작시에 타이머를 킨다.\n    componentDidMount() {\n        console.log(\"typing componentDidMount\");\n        this.timer = setTimeout(this.type, this.nextTypingDelay);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.textArray !== prevProps.textArray) {\n            this.setState({ isTyping: false });\n        } else {\n            if (this.state.isTyping) {\n                this.timer = setTimeout(this.type, this.typingDelay);\n            } else {\n                this.tiemr = setTimeout(this.erase, this.erasingDelay);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        console.log(\"typing componentWillUnmount\");\n        clearTimeout(this.timer);\n    }\n\n    type = () => {\n        if (\n            this.state.charIdx <\n            this.props.textArray[this.state.textArrayIdx].length\n        ) {\n            if (!this.cursorRef.current.classList.contains(styles.typing)) {\n                this.cursorRef.current.classList.add(styles.typing);\n            }\n            this.setState({\n                text:\n                    this.state.text +\n                    this.props.textArray[this.state.textArrayIdx][\n                        this.state.charIdx\n                    ],\n                charIdx: this.state.charIdx + 1,\n            });\n        } else {\n            this.cursorRef.current.classList.remove(styles.typing);\n            this.setState({\n                textArrayIdx:\n                    this.state.textArrayIdx + 1 >= this.props.textArray.length\n                        ? 0\n                        : this.state.textArrayIdx + 1,\n                // charIdx: 0,\n                isTyping:\n                    this.state.textArrayIdx + 1 >= this.props.textArray.length\n                        ? true\n                        : true,\n            });\n        }\n    };\n\n    erase = () => {\n        if (this.state.charIdx > 0) {\n            if (!this.cursorRef.current.classList.contains(styles.typing)) {\n                this.cursorRef.current.classList.add(styles.typing);\n            }\n            this.setState({\n                text: this.state.text.substring(0, this.state.charIdx - 1),\n                charIdx:\n                    this.state.charIdx - 1 >= 0 ? this.state.charIdx - 1 : 0,\n            });\n        } else {\n            this.cursorRef.current.classList.remove(styles.typing);\n\n            if (this.state.textArrayIdx >= this.props.textArray.length - 1) {\n                this.setState({\n                    textArrayIdx: 0,\n                    charIdx: 0,\n                    isTyping: true,\n                });\n            } else {\n                this.setState({\n                    textArrayIdx: this.state.textArrayIdx + 1,\n                    charIdx: 0,\n                    isTyping: true,\n                });\n            }\n        }\n    };\n\n    render() {\n        return (\n            <div className={styles.container}>\n                <p>\n                    Hi there~&nbsp;\n                    <br />\n                    <span className={styles.text}>{this.state.text}</span>\n                    <span ref={this.cursorRef} className={styles.cursor}>\n                        &nbsp;\n                    </span>\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default Typing;\n","import React from \"react\";\nimport styles from \"./sign-contanie.module.css\";\n// 필요한것 : google, github login button\n//\nconst SignContainer = ({ display, onClickX, onClickGoogle, onClickGithub }) => {\n    const onClickGoogleBtn = () => {\n        onClickX && onClickX();\n        onClickGoogle && onClickGoogle();\n    };\n\n    const onClickGithubBtn = () => {\n        onClickX && onClickX();\n        onClickGithub && onClickGithub();\n    };\n\n    return (\n        <div className={display === true ? styles.screen : styles.hide}>\n            <section className={styles.container}>\n                <button className={styles.outBtn} onClick={onClickX}>\n                    <i className=\"fas fa-times\"></i>\n                </button>\n                <header className={styles.header}>LOG IN</header>\n                <button className={styles.googleBtn} onClick={onClickGoogleBtn}>\n                    <i className=\"fab fa-google\"></i>\n                    <span>Google</span>\n                </button>\n                <button className={styles.githubBtn} onClick={onClickGithubBtn}>\n                    <i className=\"fab fa-github\"></i>\n                    <span>Github</span>\n                </button>\n            </section>\n        </div>\n    );\n};\n\nexport default SignContainer;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Typing from \"components/typing/typing\";\nimport SignContainer from \"components/sign-contanier/sign-container\";\nimport styles from \"./homePage.module.css\";\n\nconst HomePage = ({ user, signInGoogle, signInGithub }) => {\n    const [signContainerDisplay, setSignContainerDisplay] = useState(false);\n\n    let history = useHistory();\n\n    const redirctionMainPage = () => {\n        history.push(\"/main\");\n    };\n\n    const onDisplaySignContainer = () => {\n        setSignContainerDisplay(true);\n    };\n\n    const offDisplaySignContaniner = () => {\n        setSignContainerDisplay(false);\n    };\n\n    return (\n        <div className={styles.container}>\n            <Typing\n                textArray={\n                    user === null\n                        ? [\"Please log in.\"]\n                        : [\"Press the button again.\"]\n                }\n            />\n            <button\n                className={styles.logIn}\n                onClick={\n                    user === null ? onDisplaySignContainer : redirctionMainPage\n                }\n            >\n                get start\n            </button>\n            <SignContainer\n                display={signContainerDisplay}\n                onClickX={offDisplaySignContaniner}\n                onClickGoogle={signInGoogle}\n                onClickGithub={signInGithub}\n            />\n        </div>\n    );\n};\nexport default HomePage;\n","import React, { memo, useState } from \"react\";\nimport styles from \"./editor_detail.module.css\";\nimport Axios from \"axios\";\n\nconst EditorDetail = memo(({ idx, data, edit, onDelete }) => {\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    const onChangeBgColor = (event) => {\n        edit(idx, { ...data, bgColor: event.target.value });\n    };\n    const onChangeFontColor = (event) => {\n        edit(idx, { ...data, fontColor: event.target.value });\n    };\n    const onChangeName = (event) => {\n        edit(idx, { ...data, name: event.target.value });\n    };\n    const onChangeJob = (event) => {\n        edit(idx, { ...data, job: event.target.value });\n    };\n    const onChangeEmail = (event) => {\n        edit(idx, { ...data, email: event.target.value });\n    };\n    const onChangePhoneNumber = (event) => {\n        edit(idx, { ...data, phoneNumber: event.target.value });\n    };\n\n    const handleClickDelete = () => {\n        onDelete(idx);\n    };\n\n    const uploadImg = () => {\n        if (selectedFile === null) {\n            window.alert(\"이미지를 추가해주세요!\");\n            return;\n        }\n        const formData = new FormData();\n        formData.append(\"file\", selectedFile);\n        formData.append(\n            \"upload_preset\",\n            `${process.env.REACT_APP_UPLOAD_PRESET}`\n        );\n\n        Axios.post(\n            `https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUD_NAME}/upload`,\n            formData\n        ).then((response) => {\n            console.log(response.data.secure_url);\n            edit(idx, { ...data, imgUrl: response.data.secure_url });\n        });\n    };\n\n    return (\n        <div className={styles.container}>\n            <img className={styles.img} src={data.imgUrl} alt=\"img\" />\n            <section className={styles.info}>\n                <div className={styles.colorPicker}>\n                    <label>bg color : </label>\n                    <input\n                        type=\"color\"\n                        id=\"colorpicker\"\n                        onChange={onChangeBgColor}\n                        value={\n                            data.bgColor !== undefined\n                                ? data.bgColor\n                                : \"#ffffff\"\n                        }\n                    />\n                    <br />\n                    <label>font color : </label>\n                    <input\n                        type=\"color\"\n                        id=\"colorpicker\"\n                        onChange={onChangeFontColor}\n                        value={\n                            data.fontColor !== undefined\n                                ? data.fontColor\n                                : \"#ffffff\"\n                        }\n                    />\n                </div>\n                <input\n                    type=\"text\"\n                    placeholder=\"name\"\n                    alt=\"name\"\n                    onChange={onChangeName}\n                    value={data.name || \"\"}\n                    maxLength=\"20\"\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"job\"\n                    alt=\"job\"\n                    onChange={onChangeJob}\n                    value={data.job || \"\"}\n                    maxLength=\"20\"\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"email@email.com\"\n                    alt=\"email\"\n                    onChange={onChangeEmail}\n                    value={data.email || \"\"}\n                    maxLength=\"20\"\n                />\n                <input\n                    type=\"tel\"\n                    placeholder=\"phoneNumber\"\n                    alt=\"phoneNumber\"\n                    onChange={onChangePhoneNumber}\n                    value={data.phoneNumber || \"\"}\n                    maxLength=\"20\"\n                />\n            </section>\n            <section className={styles.btns}>\n                <input\n                    className={styles.fileUploader}\n                    type=\"file\"\n                    name=\"file\"\n                    onChange={(event) => setSelectedFile(event.target.files[0])}\n                />\n                <button className={styles.imgUploadBtn} onClick={uploadImg}>\n                    upload img\n                </button>\n                <button\n                    className={styles.deleteBtn || \"\"}\n                    onClick={handleClickDelete}\n                >\n                    delete\n                </button>\n            </section>\n        </div>\n    );\n});\n\nexport default EditorDetail;\n","import EditorDetail from \"components/editor_detail/editor_detail\";\nimport React, { useEffect } from \"react\";\nimport styles from \"./editor.container.module.css\";\n\nconst EditorContainer = ({ data, handleEdit }) => {\n    const onEidt = (idx, changeData) => {\n        //idx의 데이터값을 바꾼 data값을 return\n        const newData = [...data];\n        newData[idx] = changeData;\n        handleEdit(newData);\n    };\n\n    const onDelete = (idx) => {\n        // //idx의 데이터값을 바꾼 data값을 return\n        // const newData = [...data];\n        // newData.splice(idx, 1);\n        // handleEdit(newData);\n        console.log(\"onDelete\");\n        const newData = [...data];\n        newData.splice(idx, 1);\n        handleEdit(newData);\n        console.log(idx);\n    };\n\n    return (\n        <div className={styles.container}>\n            {data.map((item, idx) => (\n                <EditorDetail\n                    idx={idx}\n                    key={idx}\n                    data={item}\n                    edit={onEidt}\n                    onDelete={onDelete}\n                />\n            ))}\n        </div>\n    );\n};\nexport default EditorContainer;\n","import React from \"react\";\nimport styles from \"./view_detail.module.css\";\n\nconst ViewDetail = ({ data }) => {\n    return (\n        <div\n            className={styles.container}\n            style={{ background: data.bgColor, color: data.fontColor }}\n        >\n            <img className={styles.img} src={data.imgUrl} alt=\"img\" />\n            <section className={styles.info}>\n                <span className={styles.name}>name:&nbsp;{data.name}</span>\n                <span className={styles.job}>job:&nbsp;{data.job}</span>\n                <span className={styles.email}>email:&nbsp;{data.email}</span>\n                <span className={styles.phoneNumber}>\n                    phone:&nbsp;{data.phoneNumber}\n                </span>\n            </section>\n        </div>\n    );\n};\n\nexport default ViewDetail;\n","import ViewDetail from \"components/view_detail/view_detail\";\nimport React from \"react\";\nimport styles from \"./view_container.module.css\";\n\nconst ViewContainer = ({ data }) => {\n    return (\n        <div className={styles.container}>\n            {data.map((item) => (\n                <ViewDetail\n                    key={Date.now() + Math.random() * 1000}\n                    data={item}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default ViewContainer;\n","import EditorContainer from \"components/editor_container/editor_container\";\nimport ViewContainer from \"components/view_container/view_container\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styles from \"./mainPage.module.css\";\n\nconst MainPage = ({ data, handleEdit }) => {\n    return (\n        <div className={styles.container}>\n            <EditorContainer data={data} handleEdit={handleEdit} />\n            <ViewContainer data={data} />\n        </div>\n    );\n};\nexport default MainPage;\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./header.module.css\";\nimport SignContainer from \"components/sign-contanier/sign-container\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\n//여기서 login 여부 알려주기 그리고 누르면 로그아웃되게 하는것도 괜춘할듯\n//log out 되면 home으로 redirection\nconst Header = ({ user, signOut, signInGoogle, signInGithub, plusOne }) => {\n    const [signContainerDisplay, setSignContainerDisplay] = useState(false);\n\n    let history = useHistory();\n    let location = useLocation();\n\n    const onDisplaySignContainer = () => {\n        setSignContainerDisplay(true);\n    };\n\n    const offDisplaySignContaniner = () => {\n        setSignContainerDisplay(false);\n    };\n\n    useEffect(() => {}, []);\n\n    const handleSignOut = () => {\n        if (getCurrentLocation() === \"/main\") {\n            moveToHomePage();\n        }\n        signOut();\n    };\n\n    const getCurrentLocation = () => {\n        console.log(location.pathname);\n        return location.pathname;\n    };\n\n    // const moveToMainPage = () => {\n    //     history.push(\"/main\");\n    // };\n\n    const moveToHomePage = () => {\n        history.push(\"/\");\n    };\n\n    return (\n        <div className={styles.container}>\n            <h1 className={styles.title}>Card Maker</h1>\n            <div>\n                <button className={styles.plus} onClick={plusOne}>\n                    <i className=\"fas fa-plus-square\"></i>\n                </button>\n                <button\n                    className={styles.logState}\n                    onClick={\n                        user !== null ? handleSignOut : onDisplaySignContainer\n                    }\n                >\n                    {user !== null ? (\n                        <i className=\"fas fa-sign-out-alt\"></i>\n                    ) : (\n                        <i className=\"fas fa-sign-in-alt\"></i>\n                    )}\n                </button>\n            </div>\n            <SignContainer\n                display={signContainerDisplay}\n                onClickX={offDisplaySignContaniner}\n                onClickGoogle={signInGoogle}\n                onClickGithub={signInGithub}\n            />\n        </div>\n    );\n};\n\nexport default Header;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC8ilKxrdL-XqwYu_rEh-aXk3iBh_Y2eDs\",\n    authDomain: \"card-maker-e6496.firebaseapp.com\",\n    projectId: \"card-maker-e6496\",\n    databasseURL: \"https://card-maker-e6496-default-rtdb.firebaseio.com\",\n    storageBucket: \"card-maker-e6496.appspot.com\",\n    messagingSenderId: \"193865961720\",\n    appId: \"1:193865961720:web:7a58eecc1db3fa88802b0d\",\n    measurementId: \"G-2D34N9X30C\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n//auth 관련\nexport const auth = firebase.auth();\nconst providerOfGoogle = new firebase.auth.GoogleAuthProvider();\n// GoogleAuthProvider 클래스를 authentication 라이브러리에서 사용할 수 있도록 불러오는 코드.\nproviderOfGoogle.setCustomParameters({ prompt: \"select_account\" });\n// signIn이랑 authentication을 위해서 GoogleAuthProvider를 사용할 때마다 구글 팝업을 항상 띄우기를 원한다는 의미이다.\nexport const signInWithGoogle = () => auth.signInWithPopup(providerOfGoogle);\n// signInWithPopup 메소드는 여러 파라미터를 받을 수 있다. 트위터, 페이스북, 깃허브 등으로도 로그인이 필요할 수도 있으므로.\n// 여기에서는 google로 signIn할 것이기 때문에, 파라미터로 위에서 정의한 provider를 넣어준다.\n\n//데이터 베이스 관련 함수들\nconst database = firebase.database();\n\nexport function writeData(userId, data) {\n    if (!userId) {\n        return;\n    }\n    console.log(\"write\");\n    database.ref(\"users/\" + userId).set({\n        data: data,\n    });\n}\n\nexport function readData(userId, callback) {\n    const starDataRef = firebase.database().ref(\"users/\" + userId + \"/data/\");\n    starDataRef.on(\"value\", (snapshot) => {\n        console.log(\"read\");\n        let data = snapshot.val();\n        if (data === null) data = [];\n        callback(data);\n    });\n}\n\nexport function readOff(userId) {\n    console.log(\"readoff\");\n    const starDataRef = firebase.database().ref(\"users/\" + userId + \"/data/\");\n    starDataRef.off();\n}\n","import styles from \"./app.module.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"pages/homePage\";\nimport MainPage from \"pages/mainPage\";\nimport Header from \"components/header/header\";\nimport {\n    auth,\n    signInWithGoogle,\n    writeData,\n    readData,\n    readOff,\n} from \"firebase/firebase.utils.js\";\n\n//firebase 관련 가지고 있기\n//로그인 로그아웃 기록을 가지고 있는게 좋을거 같음. header에 가지고 있는것도 나쁘지는 않을거 같은데\n//route 기능\nfunction App() {\n    const [user, setUser] = useState(null);\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        //listener들 등록, read는 여기다 등록해야할듯\n        auth.onAuthStateChanged((result) => {\n            if (result) {\n                console.log(\"user exist\");\n                setUser(result);\n\n                //read 등록\n                readData(result.uid, setData);\n            } else {\n                console.log(\"user null\");\n                setUser(null);\n\n                //로그아웃시 readoff\n                if (user !== null) readOff(user.uid);\n            }\n        });\n    }, []);\n\n    //sign\n    const signInGoogle = () => {\n        signInWithGoogle()\n            .then((result) => {\n                /** @type {firebase.auth.OAuthCredential} */\n                console.log(result);\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                console.log(\n                    `errorCode : ${errorCode}, errorMessage : ${errorMessage}`\n                );\n            });\n    };\n\n    const signInGithub = () => {\n        console.log(\"signInGithub\");\n    };\n\n    const signOut = () => {\n        auth.signOut();\n        //그리고나서 초기화면으로 가도록 하자\n        window.alert(\"log out\");\n    };\n\n    //edit\n    //이건 edit버튼을 누를때마다 새로 data들을 update되게 해보자\n    const handleEdit = (data) => {\n        writeData(user.uid, data);\n        setData(data);\n    };\n\n    const plusOne = () => {\n        const newData = [...data];\n        newData.push({});\n        setData(newData);\n        writeData(user.uid, newData);\n    };\n\n    return (\n        <>\n            <Router>\n                <Header\n                    user={user}\n                    signOut={signOut}\n                    signInGoogle={signInGoogle}\n                    signInGithub={signInGithub}\n                    plusOne={plusOne}\n                />\n                <div>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <HomePage\n                                user={user}\n                                signInGoogle={signInGoogle}\n                                signInGithub={signInGithub}\n                            />\n                        </Route>\n                        <Route exact path=\"/main\">\n                            <MainPage data={data} handleEdit={handleEdit} />\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}